apiVersion: database.vault.m.upbound.io/v1alpha1
kind: SecretBackendRole
metadata:
  annotations:
    meta.upbound.io/example-id: database/v1alpha1/secretbackendrole
  labels:
    testing.upbound.io/example-name: role
  name: role
  namespace: upbound-system
spec:
  forProvider:
    backendSelector:
      matchLabels:
        testing.upbound.io/example-name: db
    creationStatements:
    - CREATE ROLE "{{name}}" WITH LOGIN PASSWORD '{{password}}' VALID UNTIL '{{expiration}}';
    dbNameSelector:
      matchLabels:
        testing.upbound.io/example-name: postgres
    name: dev

---

apiVersion: database.vault.m.upbound.io/v1alpha1
kind: SecretBackendConnection
metadata:
  annotations:
    meta.upbound.io/example-id: database/v1alpha1/secretbackendrole
  labels:
    testing.upbound.io/example-name: postgres
  name: postgres
  namespace: upbound-system
spec:
  forProvider:
    allowedRoles:
    - dev
    - prod
    backendSelector:
      matchLabels:
        testing.upbound.io/example-name: example
    name: postgres
    postgresql:
    - connectionUrl: postgres://username:password@host:port/database

---

apiVersion: vault.vault.m.upbound.io/v1alpha1
kind: Mount
metadata:
  annotations:
    meta.upbound.io/example-id: database/v1alpha1/secretbackendrole
  labels:
    testing.upbound.io/example-name: db
  name: db
  namespace: upbound-system
spec:
  forProvider:
    path: postgres
    type: database
