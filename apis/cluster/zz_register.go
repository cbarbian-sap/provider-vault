/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

// Package apis contains Kubernetes API for the provider.
package apis

import (
	"k8s.io/apimachinery/pkg/runtime"

	v1alpha1 "github.com/upbound/provider-vault/apis/cluster/ad/v1alpha1"
	v1alpha1alicloud "github.com/upbound/provider-vault/apis/cluster/alicloud/v1alpha1"
	v1alpha1approle "github.com/upbound/provider-vault/apis/cluster/approle/v1alpha1"
	v1alpha1audit "github.com/upbound/provider-vault/apis/cluster/audit/v1alpha1"
	v1alpha1auth "github.com/upbound/provider-vault/apis/cluster/auth/v1alpha1"
	v1alpha1aws "github.com/upbound/provider-vault/apis/cluster/aws/v1alpha1"
	v1alpha1azure "github.com/upbound/provider-vault/apis/cluster/azure/v1alpha1"
	v1alpha1cert "github.com/upbound/provider-vault/apis/cluster/cert/v1alpha1"
	v1alpha1consul "github.com/upbound/provider-vault/apis/cluster/consul/v1alpha1"
	v1alpha1database "github.com/upbound/provider-vault/apis/cluster/database/v1alpha1"
	v1alpha1egp "github.com/upbound/provider-vault/apis/cluster/egp/v1alpha1"
	v1alpha1gcp "github.com/upbound/provider-vault/apis/cluster/gcp/v1alpha1"
	v1alpha1generic "github.com/upbound/provider-vault/apis/cluster/generic/v1alpha1"
	v1alpha1github "github.com/upbound/provider-vault/apis/cluster/github/v1alpha1"
	v1alpha1identity "github.com/upbound/provider-vault/apis/cluster/identity/v1alpha1"
	v1alpha1jwt "github.com/upbound/provider-vault/apis/cluster/jwt/v1alpha1"
	v1alpha1kmip "github.com/upbound/provider-vault/apis/cluster/kmip/v1alpha1"
	v1alpha1kubernetes "github.com/upbound/provider-vault/apis/cluster/kubernetes/v1alpha1"
	v1alpha1kv "github.com/upbound/provider-vault/apis/cluster/kv/v1alpha1"
	v1alpha1ldap "github.com/upbound/provider-vault/apis/cluster/ldap/v1alpha1"
	v1alpha1managed "github.com/upbound/provider-vault/apis/cluster/managed/v1alpha1"
	v1alpha1mfa "github.com/upbound/provider-vault/apis/cluster/mfa/v1alpha1"
	v1alpha1mongodbatlas "github.com/upbound/provider-vault/apis/cluster/mongodbatlas/v1alpha1"
	v1alpha1nomad "github.com/upbound/provider-vault/apis/cluster/nomad/v1alpha1"
	v1alpha1okta "github.com/upbound/provider-vault/apis/cluster/okta/v1alpha1"
	v1alpha1password "github.com/upbound/provider-vault/apis/cluster/password/v1alpha1"
	v1alpha1pki "github.com/upbound/provider-vault/apis/cluster/pki/v1alpha1"
	v1alpha1quota "github.com/upbound/provider-vault/apis/cluster/quota/v1alpha1"
	v1alpha1rabbitmq "github.com/upbound/provider-vault/apis/cluster/rabbitmq/v1alpha1"
	v1alpha1raft "github.com/upbound/provider-vault/apis/cluster/raft/v1alpha1"
	v1alpha1rgp "github.com/upbound/provider-vault/apis/cluster/rgp/v1alpha1"
	v1alpha1ssh "github.com/upbound/provider-vault/apis/cluster/ssh/v1alpha1"
	v1alpha1terraform "github.com/upbound/provider-vault/apis/cluster/terraform/v1alpha1"
	v1alpha1token "github.com/upbound/provider-vault/apis/cluster/token/v1alpha1"
	v1alpha1transform "github.com/upbound/provider-vault/apis/cluster/transform/v1alpha1"
	v1alpha1transit "github.com/upbound/provider-vault/apis/cluster/transit/v1alpha1"
	v1alpha1apis "github.com/upbound/provider-vault/apis/cluster/v1alpha1"
	v1beta1 "github.com/upbound/provider-vault/apis/cluster/v1beta1"
	v1alpha1vault "github.com/upbound/provider-vault/apis/cluster/vault/v1alpha1"
)

func init() {
	// Register the types with the Scheme so the components can map objects to GroupVersionKinds and back
	AddToSchemes = append(AddToSchemes,
		v1alpha1.SchemeBuilder.AddToScheme,
		v1alpha1alicloud.SchemeBuilder.AddToScheme,
		v1alpha1approle.SchemeBuilder.AddToScheme,
		v1alpha1audit.SchemeBuilder.AddToScheme,
		v1alpha1auth.SchemeBuilder.AddToScheme,
		v1alpha1aws.SchemeBuilder.AddToScheme,
		v1alpha1azure.SchemeBuilder.AddToScheme,
		v1alpha1cert.SchemeBuilder.AddToScheme,
		v1alpha1consul.SchemeBuilder.AddToScheme,
		v1alpha1database.SchemeBuilder.AddToScheme,
		v1alpha1egp.SchemeBuilder.AddToScheme,
		v1alpha1gcp.SchemeBuilder.AddToScheme,
		v1alpha1generic.SchemeBuilder.AddToScheme,
		v1alpha1github.SchemeBuilder.AddToScheme,
		v1alpha1identity.SchemeBuilder.AddToScheme,
		v1alpha1jwt.SchemeBuilder.AddToScheme,
		v1alpha1kmip.SchemeBuilder.AddToScheme,
		v1alpha1kubernetes.SchemeBuilder.AddToScheme,
		v1alpha1kv.SchemeBuilder.AddToScheme,
		v1alpha1ldap.SchemeBuilder.AddToScheme,
		v1alpha1managed.SchemeBuilder.AddToScheme,
		v1alpha1mfa.SchemeBuilder.AddToScheme,
		v1alpha1mongodbatlas.SchemeBuilder.AddToScheme,
		v1alpha1nomad.SchemeBuilder.AddToScheme,
		v1alpha1okta.SchemeBuilder.AddToScheme,
		v1alpha1password.SchemeBuilder.AddToScheme,
		v1alpha1pki.SchemeBuilder.AddToScheme,
		v1alpha1quota.SchemeBuilder.AddToScheme,
		v1alpha1rabbitmq.SchemeBuilder.AddToScheme,
		v1alpha1raft.SchemeBuilder.AddToScheme,
		v1alpha1rgp.SchemeBuilder.AddToScheme,
		v1alpha1ssh.SchemeBuilder.AddToScheme,
		v1alpha1terraform.SchemeBuilder.AddToScheme,
		v1alpha1token.SchemeBuilder.AddToScheme,
		v1alpha1transform.SchemeBuilder.AddToScheme,
		v1alpha1transit.SchemeBuilder.AddToScheme,
		v1alpha1apis.SchemeBuilder.AddToScheme,
		v1beta1.SchemeBuilder.AddToScheme,
		v1alpha1vault.SchemeBuilder.AddToScheme,
	)
}

// AddToSchemes may be used to add all resources defined in the project to a Scheme
var AddToSchemes runtime.SchemeBuilder

// AddToScheme adds all Resources to the Scheme
func AddToScheme(s *runtime.Scheme) error {
	return AddToSchemes.AddToScheme(s)
}
